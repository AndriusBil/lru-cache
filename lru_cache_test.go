package lru_cache

import (
	"github.com/stretchr/testify/assert"
	"testing"
)

func TestLRUCache(t *testing.T) {
	c := New(10)
	c.Put(10, 13)
	c.Put(3, 17)
	c.Put(6, 11)
	c.Put(10, 5)
	c.Put(9, 10)
	v := c.Get(13)
	assert.Equal(t, -1, v)
	c.Put(2, 19)
	v = c.Get(2)
	assert.Equal(t, 19, v)
	v = c.Get(3)
	assert.Equal(t, 17, v)
	c.Put(5, 25)
	v = c.Get(8)
	assert.Equal(t, -1, v)
	c.Put(9, 22)
	c.Put(5, 5)
	c.Put(1, 30)
	v = c.Get(11)
	assert.Equal(t, -1, v)
	c.Put(9, 12)
	v = c.Get(7)
	assert.Equal(t, -1, v)
	v = c.Get(5)
	assert.Equal(t, 5, v)
	v = c.Get(8)
	assert.Equal(t, -1, v)
	v = c.Get(9)
	assert.Equal(t, 12, v)
	c.Put(4, 30)
	c.Put(9, 3)
	v = c.Get(9)
	assert.Equal(t, 3, v)
	v = c.Get(10)
	assert.Equal(t, 5, v)
	v = c.Get(10)
	assert.Equal(t, 5, v)
	c.Put(6, 14)
	c.Put(3, 1)
	v = c.Get(3)
	assert.Equal(t, 1, v)
	c.Put(10, 11)
	v = c.Get(8)
	assert.Equal(t, -1, v)
	c.Put(2, 14)
	v = c.Get(1)
	assert.Equal(t, 30, v)
	v = c.Get(5)
	assert.Equal(t, 5, v)
	v = c.Get(4)
	assert.Equal(t, 30, v)
	c.Put(11, 4)
	c.Put(12, 24)
	c.Put(5, 18)
	v = c.Get(13)
	assert.Equal(t, -1, v)
	c.Put(7, 23)
	v = c.Get(8)
	assert.Equal(t, -1, v)
	v = c.Get(12)
	assert.Equal(t, 24, v)
	c.Put(3, 27)
	c.Put(2, 12)
	v = c.Get(5)
	assert.Equal(t, 18, v)
	c.Put(2, 9)
	c.Put(13, 4)
	c.Put(8, 18)
	c.Put(1, 7)
	v = c.Get(6)
	assert.Equal(t, -1, v)
	c.Put(9, 29)
	c.Put(8, 21)
	v = c.Get(5)
	assert.Equal(t, 18, v)
	c.Put(6, 30)
	c.Put(1, 12)
	v = c.Get(10)
	assert.Equal(t, -1, v)
	c.Put(4, 15)
	c.Put(7, 22)
	c.Put(11, 26)
	c.Put(8, 17)
	c.Put(9, 29)
	v = c.Get(5)
	assert.Equal(t, 18, v)
	c.Put(3, 4)
	c.Put(11, 30)
	v = c.Get(12)
	assert.Equal(t, -1, v)
	c.Put(4, 29)
	v = c.Get(3)
	assert.Equal(t, 4, v)
	v = c.Get(9)
	assert.Equal(t, 29, v)
	v = c.Get(6)
	assert.Equal(t, 30, v)
	c.Put(3, 4)
	v = c.Get(1)
	assert.Equal(t, 12, v)
	v = c.Get(10)
	assert.Equal(t, -1, v)
	c.Put(3, 29)
	c.Put(10, 28)
	c.Put(1, 20)
	c.Put(11, 13)
	v = c.Get(3)
	assert.Equal(t, 29, v)
	c.Put(3, 12)
	c.Put(3, 8)
	c.Put(10, 9)
	c.Put(3, 26)
	v = c.Get(8)
	assert.Equal(t, 17, v)
	v = c.Get(7)
	assert.Equal(t, 22, v)
	v = c.Get(5)
	assert.Equal(t, 18, v)
	c.Put(13, 17)
	c.Put(2, 27)
	c.Put(11, 15)
	v = c.Get(12)
	assert.Equal(t, -1, v)
	c.Put(9, 19)
	c.Put(2, 15)
	c.Put(3, 16)
	v = c.Get(1)
	assert.Equal(t, 20, v)
	c.Put(12, 17)
	c.Put(9, 1)
	c.Put(6, 19)
	v = c.Get(4)
	assert.Equal(t, -1, v)
	v = c.Get(5)
	assert.Equal(t, 18, v)
	v = c.Get(5)
	assert.Equal(t, 18, v)
	c.Put(8, 1)
	c.Put(11, 7)
	c.Put(5, 2)
	c.Put(9, 28)
	v = c.Get(1)
	assert.Equal(t, 20, v)
	c.Put(2, 2)
	c.Put(7, 4)
	c.Put(4, 22)
	c.Put(7, 24)
	c.Put(9, 26)
	c.Put(13, 28)
	c.Put(11, 26)
}
